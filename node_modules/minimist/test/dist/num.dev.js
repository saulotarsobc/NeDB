"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var parse = require('../');

var test = require('tape');

test('nums', function (t) {
  var argv = parse(['-x', '1234', '-y', '5.67', '-z', '1e7', '-w', '10f', '--hex', '0xdeadbeef', '789']);
  t.deepEqual(argv, {
    x: 1234,
    y: 5.67,
    z: 1e7,
    w: '10f',
    hex: 0xdeadbeef,
    _: [789]
  });
  t.deepEqual(_typeof(argv.x), 'number');
  t.deepEqual(_typeof(argv.y), 'number');
  t.deepEqual(_typeof(argv.z), 'number');
  t.deepEqual(_typeof(argv.w), 'string');
  t.deepEqual(_typeof(argv.hex), 'number');
  t.deepEqual(_typeof(argv._[0]), 'number');
  t.end();
});
test('already a number', function (t) {
  var argv = parse(['-x', 1234, 789]);
  t.deepEqual(argv, {
    x: 1234,
    _: [789]
  });
  t.deepEqual(_typeof(argv.x), 'number');
  t.deepEqual(_typeof(argv._[0]), 'number');
  t.end();
});