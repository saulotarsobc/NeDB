"use strict";

var check = require('../check/check');

module.exports = function (field, location, message, contexts, _ref) {
  var validators = _ref.validators,
      sanitizers = _ref.sanitizers;
  var chain = check([field], Array.isArray(location) ? location : [location], message);
  contexts.push(chain._context);

  chain.notEmpty = function () {
    return chain.isLength({
      min: 1
    });
  };

  chain.len = chain.isLength;
  Object.keys(validators).forEach(function (name) {
    chain[name] = function () {
      for (var _len = arguments.length, options = new Array(_len), _key = 0; _key < _len; _key++) {
        options[_key] = arguments[_key];
      }

      chain._context.validators.push({
        options: options,
        custom: true,
        negated: chain._context.negateNext,
        validator: validators[name]
      });

      chain._context.negateNext = false;
      return chain;
    };
  });
  Object.keys(sanitizers).forEach(function (name) {
    chain[name] = function () {
      for (var _len2 = arguments.length, options = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        options[_key2] = arguments[_key2];
      }

      chain._context.sanitizers.push({
        options: options,
        sanitizer: sanitizers[name]
      });

      return chain;
    };
  });
  return chain;
};